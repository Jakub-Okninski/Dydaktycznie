@model Dydaktycznie.Models.Quiz
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@using System.Security.Claims

@{
    ViewData["Title"] = "Details";
}
<link rel="stylesheet" href="/css/quiz.css" />

<h1>Details</h1>

<div>
    <h4>
        Quiz: @Html.DisplayFor(model => model.Title)
    </h4>
    <hr />
    <dl class="row">

        <div class="grupowanie">

            <div>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Title)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Title)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Description)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Description)
                </dd>
                <dt class="col-sm-2">
                    Author Email
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Author.Email)
                </dd>
            </div>
           <div>
                <dt class="col-sm-2">
                    
                </dt>
                <dd class="col-sm-10">
                    @if (Model.Photo != null && Model.Photo.Length > 0)
                    {
                        string imageBase64 = Convert.ToBase64String(Model.Photo);
                        string imageDataURL = string.Format("data:image/png;base64,{0}", imageBase64);
                        <img src="@imageDataURL" alt="Quiz Photo" class="img-fluid" />
                    }
                    else
                    {
                        <p>No photo available.</p>
                    }
                </dd>
           </div>
        </div>

    </dl>
</div>
<hr />
<h4>Pytania: </h4>
@if (Model.QuizQuestions != null && Model.QuizQuestions.Any())
{
    <div>
        <hr />
        @foreach (var question in Model.QuizQuestions)
        {
            <div>
                <h6>

                    @if (User.Identity.IsAuthenticated && question.Quiz.AuthorID == User.FindFirstValue(ClaimTypes.NameIdentifier))
                    {
                    Pytanie:
                        <a href="/QuizQuestions/Details/@question.QuizQuestionID"> <span>@question.Question</span></a>
                    }
                    else
                    {
                    Pytanie:
                        <span>@question.Question</span>
                    }
                </h6>
                @{
                    int answerCounter = 1;
                }
                <ul>
                    @foreach (var answer in question.QuestionAnswers)
                    {
                        <span>Odpowiedz: @answerCounter:  @answer.Answer</span><br/>
                        answerCounter++;

                    }
                </ul>   
            </div>
        }
    </div>
}
else
{
    <p>
        Nie znaleziono pytań do tego quizu.
    </p>
}

<hr />

@if (SignInManager.IsSignedIn(User))
{
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
}
else
{
    <div>
        <a  asp-controller="Home" asp-action="Index">Back to List</a>
    </div>
}

